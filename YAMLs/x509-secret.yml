apiVersion: v1
stringData:
  gate.yml: |
    spectator:
      applicationName: ${spring.application.name}
      webEndpoint:
        enabled: false

    healthEndpoint: /health

    kubernetes:
      podAnnotations:
        prometheus.io/path: /aop-prometheus
        prometheus.io/port: '8008'
        prometheus.io/scrape: 'true'
      useExecHealthCheck: true
      customHealthCheckExecCommands: ["wget", "--no-check-certificate", "--spider", "-q", "http://localhost:8008/health"]

    server:
      ssl:
        enabled: true
        keyAlias: gate
        keyStore: /opt/saml/gate.jks
        keyStoreType: jks
        keyStorePassword: changeit
        trustStore: /opt/saml/gate.jks
        trustStoreType: jks
        trustStorePassword: changeit
        clientAuth: WANT
        crlFile: blocklist:/opsmx/blocklist
        blocklist: true
      port: '8084'
      address: 0.0.0.0
    security:
      basic:
        enabled: true
      user: {}
    cors: {}
    x509:
      enabled: true
      roleOid: 1.2.840.10070.8.1
    google: {}

    integrations:
      gremlin:
        enabled: false
        baseUrl: https://api.gremlin.com/v1

    # halconfig

    services:
      clouddriver:
        config:
          dynamicEndpoints:
            deck: http://spin-clouddriver-ro-deck:7002

  gate-local.yml: |
    okHttpClient:
      connectTimeoutMs: 600000
      readTimeoutMs: 600000
    taskService:
      maxNumberOfPolls: 1200
      defaultIntervalBetweenPolls: 10000
    server.max-http-header-size: 512000
    logging:
      level:
        # Enable debug logging by changing level to DEBUG
        root: DEBUG
    server:
      tomcat:
        httpsServerPort: X-Forwarded-Port
        internalProxies: .*
        protocolHeader: X-Forwarded-Proto
        remoteIpHeader: X-Forwarded-For
        max-connections: 100
      servlet:
        session:
          timeout: 600
          timeoutInSeconds: 600
    management:
      metrics.distribution:
        percentiles[http.server.requests]: 0.95, 0.99
        percentiles-histogram[http.server.requests]: true
        sla[http.server.requests]: 300ms, 500ms
      endpoints.web:
        exposure.include: health,info,aop-prometheus
        management.endpoints.web.base-path: /
    #spring.sleuth.enabled: false
  spinnaker.yml: |
    services:
      clouddriver:
        host: 0.0.0.0
        port: 7002
        baseUrl: http://spin-clouddriver-ro:7002
        enabled: true
      clouddriverCaching:
        host: 0.0.0.0
        port: 7002
        baseUrl: http://spin-clouddriver-caching:7002
        enabled: true
      clouddriverRo:
        host: 0.0.0.0
        port: 7002
        baseUrl: http://spin-clouddriver-ro:7002
        enabled: true
      clouddriverRoDeck:
        host: 0.0.0.0
        port: 7002
        baseUrl: http://spin-clouddriver-ro-deck:7002
        enabled: true
      clouddriverRw:
        host: 0.0.0.0
        port: 7002
        baseUrl: http://spin-clouddriver-rw:7002
        enabled: true
      deck:
        host: 0.0.0.0
        port: 9000
        baseUrl: https://spinnaker.staging.sk
        enabled: true
      echo:
        host: 0.0.0.0
        port: 8089
        baseUrl: http://spin-echo:8089
        enabled: false
      echoScheduler:
        host: 0.0.0.0
        port: 8089
        baseUrl: http://spin-echo-scheduler:8089
        enabled: true
      echoWorker:
        host: 0.0.0.0
        port: 8089
        baseUrl: http://spin-echo-worker:8089
        enabled: true
      fiat:
        host: 0.0.0.0
        port: 7003
        baseUrl: http://spin-fiat:7003
        enabled: true  # edit this as "false" if RBAC is disabled in the cluster
      front50:
        host: 0.0.0.0
        port: 8080
        baseUrl: http://spin-front50:8080
        enabled: true
      gate:
        host: 0.0.0.0
        port: 8084
        baseUrl: http://spin-gate:8084
        enabled: true
      igor:
        host: 0.0.0.0
        port: 8088
        baseUrl: http://spin-igor:8088
        enabled: true
      kayenta:
        host: 0.0.0.0
        port: 8090
        baseUrl: http://spin-kayenta:8090
        enabled: false
      orca:
        host: 0.0.0.0
        port: 8083
        baseUrl: http://spin-orca:8083
        enabled: true
      redis:
        host: 0.0.0.0
        port: 6379
        baseUrl: redis://:password@isd-redis-master:6379
        enabled: true
      rosco:
        host: 0.0.0.0
        port: 8087
        baseUrl: http://spin-rosco:8087
        enabled: true
      monitoringDaemon:
        host: 0.0.0.0
        port: 8008
        baseUrl: http://spin-monitoring-daemon.spin:8008
        enabled: false

    global.spinnaker.timezone: America/Los_Angeles
  spinnakerconfig.yml: |
    #This is only required for additional config
    encrypt:
      key: Q7udUkHPuA3VnNlOtksSgQ
kind: Secret
metadata:
  name: opsmx-x509-gate-secret
  labels:
    team: opsmx
    product: engineering-productivity
    project: spin
